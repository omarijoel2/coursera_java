#BlueJ class context
comment0.target=MaximumTemperature
comment1.params=parser
comment1.target=org.apache.commons.csv.CSVRecord\ hottestHourInFile(org.apache.commons.csv.CSVParser)
comment10.params=parser
comment10.target=double\ averageTemperatureInFile(org.apache.commons.csv.CSVParser)
comment11.params=
comment11.target=void\ testaverageTemperatureInFile()
comment12.params=parser\ level
comment12.target=double\ averageTemperatureWithHighHumidityInFile(org.apache.commons.csv.CSVParser,\ double)
comment13.params=
comment13.target=void\ testHottestInManyDays()
comment2.params=parser
comment2.target=org.apache.commons.csv.CSVRecord\ coldestHourInFile(org.apache.commons.csv.CSVParser)
comment3.params=currentRow\ coldestSoFar
comment3.target=org.apache.commons.csv.CSVRecord\ getSmallestOfTwo(org.apache.commons.csv.CSVRecord,\ org.apache.commons.csv.CSVRecord)
comment4.params=currentRow\ largestSoFar
comment4.target=org.apache.commons.csv.CSVRecord\ getLargestOfTwo(org.apache.commons.csv.CSVRecord,\ org.apache.commons.csv.CSVRecord)
comment5.params=
comment5.target=void\ testHottestInDay()
comment6.params=
comment6.target=org.apache.commons.csv.CSVRecord\ hottestInManyDays()
comment7.params=parser
comment7.target=org.apache.commons.csv.CSVRecord\ lowestHumidityInFile(org.apache.commons.csv.CSVParser)
comment8.params=
comment8.target=void\ testColdestHourInFile()
comment9.params=
comment9.target=void\ fileWithColdestTemperature()
numComments=14
